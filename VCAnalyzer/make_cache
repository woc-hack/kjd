#! /bin/bash

# 
# Create the global latest_rev cache from the local caches for each CVE
#

# Check the command line args
if [[ $# -ne 2 ]]; then
    echo "usage: make_cache <vca ouput directory> <new cache directory>"
    exit 1
fi
indir="$1"
outdir="$2"

if [ ! -d "$indir" ]; then
    echo "Error: directory $indir does not exist"
    exit 1
fi

if [ -d "$outdir" ]; then
    echo "Error: directory $outdir already exists"
    exit 1
fi

mkdir $outdir
if [ $? -ne 0 ];then
    exit
fi

# This runs faster on da2 because home areas are on da2
hostname=`uname -n`
if [ ! "$hostname" = "da2.eecs.utk.edu" ]; then
    echo "Note: $0 runs faster on da2 since that where home areas live"
fi


#
# get phase 2 cache
#
echo "Getting Phase 2 cache"
for dir in $(find $indir/CVE -name "CVE-*"); do 
    cve=$(basename $dir)
    if [ -f $dir/cache.latest_rev ]; then
        echo $cve
        mkdir -p $outdir/CVE/$cve
        cp $dir/cache.latest_rev $outdir/CVE/$cve
    else
        echo "$cve (no cache)"
    fi
done

# The old way:
#find $indir -name cache.latest_rev -exec cat {} \; | sed -e "s/;.*$//" | sort -u > $outdir/latest_rev.global

# merge with existing cache file
#if [ -f ./cache/latest_rev.global ]; then
#    cat $outfile ./cache/latest_rev.global | sort -u > $outdir/latest_rev.merge
#fi




#
# Get phase 3 cache
#
echo "Getting Phase 3 cache"
find $indir -name cache.p_metadata -exec cat {} \; | sort -u > $outdir/p_metadata.global
find $indir -name cache.m_metadata -exec cat {} \; | sort -u > $outdir/m_metadata.global

# merge with existing cache file
if [ -f ./cache/p_metadata.global ]; then
    cat $outdir/p_metadata.global ./cache/p_metadata.global | sort -u > $outdir/p.merge
fi
if [ -f ./cache/m_metadata.global ]; then
    cat $outdir/m_metadata.global ./cache/m_metadata.global | sort -u > $outdir/m.merge
fi



